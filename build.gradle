buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://maven.parchmentmc.org' }
        maven { url = "https://www.cursemaven.com" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
//apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'org.spongepowered.mixin'

version = '1.0'
group = 'com.creep3rcrafter.overgrowth' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'overgrowth'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {

    mappings channel: 'parchment', version: '2022.03.06-1.16.5'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'
            //arg "-mixin.config=overgrowth.mixin.json"
            mods {
                overgrowth {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'
            //arg "-mixin.config=overgrowth.mixin.json"
            mods {
                overgrowth {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'overgrowth', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                overgrowth {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = "https://www.cursemaven.com" }
    mavenLocal()
}

dependencies {//name-appid:download
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.29'
    implementation fg.deobf('curse.maven:curios-309927:3275653')
    implementation fg.deobf('curse.maven:jei-238222:3652153')
    implementation fg.deobf('curse.maven:top-245211:3665853')
    implementation fg.deobf('curse.maven:worldedit-225608:3283693')
    implementation fg.deobf('com.creep3rcrafter.creep3rcore:Creep3rCore:1.0')
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}
mixin {
    // MixinGradle Settings
    add sourceSets.main, 'overgrowth.mixins-refmap.json'
    config 'overgrowth.mixin.json'
    debug.verbose = true
    debug.export = true
    quiet
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "overgrowth",
                "Specification-Vendor"    : "overgrowthsareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "overgrowthsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": 0,
                "MixinConfigs": "overgrowth.mixin.json"
        ])
    }
    rename 'mixin.refmap.json', 'overgrowth.mixin-refmap.json'
}
// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
